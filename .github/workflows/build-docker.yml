name: ci

on:
  push:
    branches:
      - main
      - test-cred
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build-notebook-image:
    runs-on: ubuntu-20.04
    steps:

      - name: Set parameters
        run: |
          echo "image_name=syoh/local-jupyter-server" >> $GITHUB_ENV
          echo "short_sha=$( echo ${{ github.sha }} | cut -c1-7 )" >> $GITHUB_ENV

      - name: Set derived parameters
        run: |
          echo "full_tag=${{ env.image_name }}:${{ env.short_sha }}" >> $GITHUB_ENV

      - name: Test value
        run: |
          echo ${{ env.action_state }}
          echo ${{ env.short_sha }}
          echo ${{ env.full_tag }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: "bef25111-1006-489c-ad61-bf56e6a1a6b2"

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile-bare
          # platforms: linux/amd64,linux/arm64,linux/386
          platforms: linux/amd64
          push: true
          tags: ${{ env.full_tag }}

      - name: Generate conda package lists
        run: |
          docker run -i --rm ${{ env.full_tag }} bash -c 'conda list --explicit' > requirement.txt
          docker run -i --rm ${{ env.full_tag }} bash -c 'conda env export -n base' | sed 's/name: base/name: otter-gradescope-env/' | grep -v '^prefix' > environment.yml
          cat requirement.txt
          cat environment.yml

      - name: Upload conda package lists
        uses: actions/upload-artifact@v2
        with:
          name: conda-package-lists
          path: |
            requirement.txt
            environment.yml

  create-release:
    # https://github.com/actions/upload-release-asset
    name: Create Release
    runs-on: ubuntu-latest
    needs: build-notebook-image
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            * Update all actions
          draft: false
          prerelease: false

      - name: Download conda package lists
        uses: actions/download-artifact@v2
        with:
          name: conda-package-lists

      - name: Upload environment.yml
        id: upload-environment-yml
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./environment.yml
          asset_name: environment.yml
          asset_content_type: text/plain

      - name: Upload requirement.txt
        id: upload-requirement-txt
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./requirement.txt
          asset_name: requirement.txt
          asset_content_type: text/plain
